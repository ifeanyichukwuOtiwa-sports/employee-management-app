/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.6.2/samples
 */
buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_plugin_version}")
    }
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: "io.spring.dependency-management"

    sourceCompatibility = "17"
    targetCompatibility = "17"

    configurations {
        compileOnly {
            extendsFrom(annotationProcessor)
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom("org.junit:junit-bom:${junit_jupiter_version}")
            mavenBom("org.testcontainers:testcontainers-bom:${testcontainers_version}")

        }
    }

    dependencies {
        implementation("org.slf4j:slf4j-api:${slf4j_api_version}")
        implementation("ch.qos.logback:logback-core:${logback_version}")
        implementation("ch.qos.logback:logback-classic:${logback_version}")
        implementation("org.jetbrains:annotations:24.0.1")

        compileOnly("org.projectlombok:lombok:${lombok_version}")
        annotationProcessor("org.projectlombok:lombok:${lombok_version}")

        testCompileOnly("org.projectlombok:lombok:${lombok_version}")
        testAnnotationProcessor("org.projectlombok:lombok:${lombok_version}")

        testImplementation("org.assertj:assertj-core:${assertj_version}")
        testImplementation("org.junit.jupiter:junit-jupiter-api:${junit_jupiter_version}")
        testImplementation("org.mockito:mockito-junit-jupiter:${mockito_version}")
        testImplementation("org.springframework.boot:spring-boot-starter-test:${spring_boot_version}")
        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junit_jupiter_version}")
        testImplementation("org.awaitility:awaitility:${awaitility_version}")
        testImplementation("org.mockito:mockito-core:${mockito_version}")
    }

    test {
        useJUnitPlatform()
    }

}